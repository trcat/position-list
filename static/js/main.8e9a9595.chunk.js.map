{"version":3,"sources":["component/position.js","index.js"],"names":["newPositionStyle","height","width","overflow","newPositionContentStyle","margin","newPositionListStyle","defaultTop","timer","runSrcoll","Position","props","positionListRef","createRef","useState","items","setItems","useEffect","list","current","listRect","getBoundingClientRect","listHeight","bottom","top","offsetTop","style","limit","setInterval","length","clearInterval","Promise","res","rej","getItems","slice","then","newItems","Array","result","concat","speed","className","title","tool","onMouseEnter","onMouseLeave","ref","map","item","index","key","id","href","url","contents","count","getItemsSource","begin","end","i","push","toString","ReactDOM","render","askNum","showed","document","getElementById"],"mappings":"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","file":"static/js/main.8e9a9595.chunk.js","sourcesContent":["import React, { createRef, useState, useEffect } from 'react';\nimport '../css/position.css'\n\nconst newPositionStyle = {\n    height: '364px',\n    width: '100%',\n    overflow: 'hidden'\n};\nconst newPositionContentStyle = {\n    width: '1180px',\n    height: '300px',\n    margin: '32px auto'\n}\nconst newPositionListStyle= {\n    width: '850px',\n    height: '300px'\n}\nlet defaultTop = 0;\nlet timer = null;\nlet runSrcoll = null;\n\n/**\n * position component\n * @param {title:string, moreUrl:string, items:Array<{id:string, url:string, contents:Array}>, getItems:Function} props \n */\nfunction Position(props) {\n    // Ref\n    const positionListRef = createRef();\n\n    // State\n\n    const [items, setItems] = useState(props.items || []);\n\n    // Handler Function\n\n    function mouseEnterList() {\n        if (positionListRef) {\n            clearInterval(timer);\n            timer = null;\n        }\n    }\n\n    function mouseLeaveList() {\n        if (positionListRef && timer === null) {\n            typeof runSrcoll === 'function' && runSrcoll();\n        }\n    }\n\n    // Effect\n\n    useEffect(() => {\n        const list = positionListRef.current;\n        const listRect = list.getBoundingClientRect();\n        const listHeight = listRect.bottom - listRect.top;\n        defaultTop = list.offsetTop;\n        let top = defaultTop;\n        list.style.top = `${top}px`;\n        const limit = top - (listHeight / 2);\n\n        runSrcoll = () => {\n            timer = setInterval(() => {\n                if (top !== limit && items.length > 0) {\n                    top -= 1;\n                    list.style.top = `${top}px`;\n                } else {\n                    clearInterval(timer);\n                    timer = null;\n\n                    //更新 items\n                    new Promise((res, rej) => {\n                        if (typeof props.getItems === 'function') {\n                            res(props.getItems(items.length / 2, items.slice(0, items.length / 2)))\n                        } else {\n                            res([]);\n                        }\n                    }).then((newItems) => {\n                        if (newItems instanceof Array && newItems.length > 0) {\n                            setItems((items) => {\n                                let result = items.slice(items.length / 2);\n                                result = result.concat(newItems);\n                                return result;\n                            })\n                        } else {\n                            // 如果没有新的内容，就把旧的内容重新轮播一遍\n                            setItems((items) => {\n                                let result = items.slice(items.length / 2);\n                                result = result.concat(items.slice(0, items.length / 2));\n                                return result;\n                            })\n                        }\n                    })\n                }\n            }, props.speed || 10);\n        };\n\n        runSrcoll();\n\n        return () => {\n            list.style.top = `${defaultTop}px`;\n        }\n    })\n\n    return (\n        <div className=\"newPosition\" style={newPositionStyle}>\n            <div className=\"newPosition-content\" style={newPositionContentStyle}>\n                <div className=\"newPosition-list\" style={newPositionListStyle}>\n                    <div className=\"more-positon\">\n                        {props.title}\n                        {props.tool && <props.tool/>}\n                    </div>\n                    <ul className=\"position-list\" \n                        onMouseEnter={mouseEnterList}\n                        onMouseLeave={mouseLeaveList}\n                        ref={positionListRef}>\n                        {items.map((item, index) => (\n                            <li key={`${item.id}`}>\n                                <a className=\"title\" href={item.url} title={item.contents[0]}> \n                                    {item.contents[0]}\n                                </a>\n                                <em className=\"gray\">{item.contents[2]}</em>\n                                <em className=\"text\">{item.contents[1]}</em>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Position;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Position from './component/position';\n\nconst title = '最新职位';\nconst speed = 30;\nlet count = 0;\nfunction getItemsSource(begin, end) {\n    const result = [];\n\n    for (let i = begin; i < begin + end; i++) {\n        const contents = [`这是第 ${i + 1} 个岗位`, `这是第 ${i + 1} 个岗位的城市`, `不知道多久`];\n        result.push({\n            id: i.toString(),\n            url: 'https://job.alibaba.com/zhaopin/positionList.html?',\n            contents: contents\n        })\n    }\n\n    count = begin + end;\n\n    return result;\n}\n\nconst items = getItemsSource(0, 40);\n\nconst getItems = function (askNum, showed) {\n    const begin = count + 1;\n    const result = getItemsSource(begin, askNum);\n\n    return result;\n}\nfunction tool(props) {\n    return <a href={'https://job.alibaba.com/zhaopin/positionList.html?'}>更多</a>;\n}\n\nReactDOM.render(\n    <Position title={title} tool={tool} speed={speed} items={items} getItems={getItems}/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}