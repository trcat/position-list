{"version":3,"sources":["component/position.js","index.js"],"names":["newPositionStyle","height","width","overflow","newPositionContentStyle","margin","newPositionListStyle","defaultTop","Position","props","positionListRef","createRef","useState","items","setItems","useEffect","list","current","listRect","getBoundingClientRect","listHeight","bottom","top","offsetTop","style","limit","timer","runSrcoll","setInterval","clearInterval","Promise","res","rej","getItems","length","slice","then","newItems","Array","result","concat","speed","addEventListener","className","title","moreUrl","href","ref","map","item","index","time","Date","now","Math","round","key","id","url","position","city","renderList","count","getItemsSource","begin","end","i","push","toString","ReactDOM","render","askNum","showed","document","getElementById"],"mappings":"6JAGMA,G,KAAmB,CACrBC,OAAQ,QACRC,MAAO,OACPC,SAAU,WAERC,EAA0B,CAC5BF,MAAO,SACPD,OAAQ,QACRI,OAAQ,aAENC,EAAsB,CACxBJ,MAAO,QACPD,OAAQ,SAERM,EAAa,EA4GFC,MAtGf,SAAkBC,GAEd,IAAMC,EAAkBC,sBAFH,EAMKC,mBAASH,EAAMI,OAAS,IAN7B,mBAMdA,EANc,KAMPC,EANO,KAkFrB,OAjDAC,qBAAU,WACN,IAAMC,EAAON,EAAgBO,QACvBC,EAAWF,EAAKG,wBAChBC,EAAaF,EAASG,OAASH,EAASI,IAE1CA,EADJf,EAAaS,EAAKO,UAElBP,EAAKQ,MAAMF,IAAX,UAAoBA,EAApB,MACA,IAAMG,EAAQH,EAAOF,EAAa,EAC9BM,EAAQ,KAEZ,SAASC,IACLD,EAAQE,aAAY,WACZN,IAAQG,GACRH,GAAO,EACPN,EAAKQ,MAAMF,IAAX,UAAoBA,EAApB,QAEAO,cAAcH,GAGd,IAAII,SAAQ,SAACC,EAAKC,GACdD,EAAItB,EAAMwB,SAASpB,EAAMqB,OAAS,EAAGrB,EAAMsB,MAAM,EAAGtB,EAAMqB,OAAS,QACpEE,MAAK,SAACC,GACDA,aAAoBC,OACpBxB,GAAS,SAACD,GACN,IAAI0B,EAAS1B,EAAMsB,MAAMtB,EAAMqB,OAAS,GAExC,OADAK,EAASA,EAAOC,OAAOH,YAMxC5B,EAAMgC,OAab,OAVAd,IAEAX,EAAK0B,iBAAiB,cAAc,WAChCb,cAAcH,MAGlBV,EAAK0B,iBAAiB,cAAc,WAChCf,OAGG,WACHX,EAAKQ,MAAMF,IAAX,UAAoBf,EAApB,UAKJ,yBAAKoC,UAAU,cAAcnB,MAAOxB,GAChC,yBAAK2C,UAAU,sBAAsBnB,MAAOpB,GACxC,yBAAKuC,UAAU,mBAAmBnB,MAAOlB,GACrC,yBAAKqC,UAAU,gBACVlC,EAAMmC,MACNnC,EAAMoC,SAAW,uBAAGF,UAAU,oBAAoBG,KAAMrC,EAAMoC,SAA7C,iBAItB,wBAAIF,UAAU,gBACVI,IAAKrC,GA9EzB,SAAoBG,GAChB,OAAOA,EAAMmC,KAAI,SAACC,EAAMC,GACpB,IAAIC,EAAOC,KAAKC,MAAQJ,EAAKE,KAE7B,OADAA,EAAOG,KAAKC,MAAMJ,EAAO,IAAO,IAE5B,wBAAIK,IAAG,UAAKP,EAAKQ,KACb,uBAAGd,UAAU,WAAWG,KAAMG,EAAKS,IAAKd,MAAOK,EAAKU,UAC/CV,EAAKU,UAEV,wBAAIhB,UAAU,QAAQQ,EAAO,EAAP,UAAcA,EAAd,4BAA2B,gBACjD,wBAAIR,UAAU,QAAQM,EAAKW,UAqEtBC,CAAWhD,QC9GhCiD,EAAQ,EACZ,SAASC,EAAeC,EAAOC,GAG3B,IAFA,IAAM1B,EAAS,GAEN2B,EAAIF,EAAOE,EAAIF,EAAQC,EAAKC,IACjC3B,EAAO4B,KAAK,CACRV,GAAIS,EAAEE,WACNT,SAAS,sBAAD,OAASO,EAAI,EAAb,uBACRR,IAAK,qDACLE,KAAK,sBAAD,OAASM,EAAI,EAAb,yCACJf,KAAMC,KAAKC,QAMnB,OAFAS,EAAQE,EAAQC,EAET1B,EAGX,IAAM1B,EAAQkD,EAAe,EAAG,IAShCM,IAASC,OACL,kBAAC,EAAD,CAAU1B,MAhCA,2BAgCcC,QA/BZ,qDA+B8BJ,MA9BhC,GA8B8C5B,MAAOA,EAAOoB,SARzD,SAAUsC,EAAQC,GAI/B,OAFeT,EADDD,EAAQ,EACeS,MAOrCE,SAASC,eAAe,U","file":"static/js/main.56556857.chunk.js","sourcesContent":["import React, { createRef, useState, useEffect } from 'react';\nimport '../css/position.css'\n\nconst newPositionStyle = {\n    height: '364px',\n    width: '100%',\n    overflow: 'hidden'\n};\nconst newPositionContentStyle = {\n    width: '1180px',\n    height: '300px',\n    margin: '32px auto'\n}\nconst newPositionListStyle= {\n    width: '850px',\n    height: '300px'\n}\nlet defaultTop = 0;\n\n/**\n * position component\n * @param {title:string, moreUrl:string, items:Array<{id:string, position:string, url:string, city:string, time:number}>, getItems:Function} props \n */\nfunction Position(props) {\n    // Ref\n    const positionListRef = createRef();\n\n    // State\n\n    const [items, setItems] = useState(props.items || []);\n\n    // Render Function\n\n    /**\n     * 渲染 position list\n     * @param {Array<{id:string, position:string, url:string, city:string, time:number}>} items \n     * @return {Array<Element> | Element}\n     */\n    function renderList(items) {\n        return items.map((item, index) => {\n            let time = Date.now() - item.time;\n            time = Math.round(time / 1000 / 60);\n            return (\n                <li key={`${item.id}`}>\n                    <a className=\"position\" href={item.url} title={item.position}> \n                        {item.position}\n                    </a>\n                    <em className=\"time\">{time > 0 ? `${time}分钟之前` : '刚刚'}</em>\n                    <em className=\"city\">{item.city}</em>\n                </li>\n            )\n        })\n    }\n\n    // Effect\n\n    useEffect(() => {\n        const list = positionListRef.current;\n        const listRect = list.getBoundingClientRect();\n        const listHeight = listRect.bottom - listRect.top;\n        defaultTop = list.offsetTop;\n        let top = defaultTop;\n        list.style.top = `${top}px`;\n        const limit = top - (listHeight / 2);\n        let timer = null;\n\n        function runSrcoll() {\n            timer = setInterval(() => {\n                if (top !== limit) {\n                    top -= 1;\n                    list.style.top = `${top}px`;\n                } else {\n                    clearInterval(timer);\n\n                    //更新 items\n                    new Promise((res, rej) => {\n                        res(props.getItems(items.length / 2, items.slice(0, items.length / 2)))\n                    }).then((newItems) => {\n                        if (newItems instanceof Array) {\n                            setItems((items) => {\n                                let result = items.slice(items.length / 2);\n                                result = result.concat(newItems);\n                                return result;\n                            })\n                        }\n                    })\n                }\n            }, props.speed);\n        };\n\n        runSrcoll();\n\n        list.addEventListener('mouseenter', () => {\n            clearInterval(timer);\n        });\n\n        list.addEventListener('mouseleave', () => {\n            runSrcoll();\n        })\n\n        return () => {\n            list.style.top = `${defaultTop}px`;\n        }\n    })\n\n    return (\n        <div className=\"newPosition\" style={newPositionStyle}>\n            <div className=\"newPosition-content\" style={newPositionContentStyle}>\n                <div className=\"newPosition-list\" style={newPositionListStyle}>\n                    <div className=\"more-positon\">\n                        {props.title}\n                        {props.moreUrl && <a className=\"clickMorePosition\" href={props.moreUrl}>\n                            更多\n                        </a>}\n                    </div>\n                    <ul className=\"position-list\" \n                        ref={positionListRef}>\n                        {renderList(items)}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Position;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Position from './component/position';\n\nconst title = '最新职位';\nconst moreUrl = 'https://job.alibaba.com/zhaopin/positionList.html?';\nconst speed = 30;\nlet count = 0;\nfunction getItemsSource(begin, end) {\n    const result = [];\n\n    for (let i = begin; i < begin + end; i++) {\n        result.push({\n            id: i.toString(),\n            position: `这是第 ${i + 1} 个岗位`,\n            url: 'https://job.alibaba.com/zhaopin/positionList.html?',\n            city: `这是第 ${i + 1} 个岗位的城市`,\n            time: Date.now()\n        })\n    }\n\n    count = begin + end;\n\n    return result;\n}\n\nconst items = getItemsSource(0, 40);\n\nconst getItems = function (askNum, showed) {\n    const begin = count + 1;\n    const result = getItemsSource(begin, askNum);\n\n    return result;\n}\n\nReactDOM.render(\n    <Position title={title} moreUrl={moreUrl} speed={speed} items={items} getItems={getItems}/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}